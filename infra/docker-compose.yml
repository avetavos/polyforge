name: polyforge-infrastructure
services:
  order_database:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${ORDER_DB_USER}
      POSTGRES_PASSWORD: ${ORDER_DB_PASSWORD}
      POSTGRES_DB: ${ORDER_DB_NAME}
    ports:
      - "${ORDER_DB_PORT}:5432"
    volumes:
      - order_data:/var/lib/postgresql/data

  inventory_database:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${INVENTORY_DB_USER}
      POSTGRES_PASSWORD: ${INVENTORY_DB_PASSWORD}
      POSTGRES_DB: ${INVENTORY_DB_NAME}
    ports:
      - "${INVENTORY_DB_PORT}:5432"
    volumes:
      - inventory_data:/var/lib/postgresql/data

  catalog_database:
    image: mongo:8.0
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${CATALOG_DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${CATALOG_DB_PASSWORD}
    ports: 
      - "${CATALOG_DB_PORT}:27017"
    volumes:
      - catalog_data:/data/db

  recommendation_database:
    image: mongo:8.0
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${RECOMMENDATION_DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${RECOMMENDATION_DB_PASSWORD}
    ports: 
      - "${RECOMMENDATION_DB_PORT}:27017"
    volumes:
      - recommendation_data:/data/db

  redis:
    image: redis:7
    ports: 
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "${RABBITMQ_PORT}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT}:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  kong:
    image: polyforge-kong:1.5
    environment:
      KONG_DATABASE: off
      KONG_LOG_LEVEL: info
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 ssl
      KONG_PLUGINS: "bundled,oidc,roles-checker,transform-headers,keycloak-request-transformer"
    ports:
      - "${KONG_PORT}:8000"
      - "${KONG_ADMIN_PORT}:8001"
      - "8443:8443"
      - "8444:8444"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure
    volumes:
      - ./kong:/usr/local/kong/declarative

  keycloak-database:
    image: postgres:15
    environment:
      POSTGRES_DB: ${KEYCLOAK_DB_NAME}
      POSTGRES_USER: ${KEYCLOAK_DB_USER}
      POSTGRES_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
    volumes:
      - keycloak_database_data:/var/lib/postgresql/data

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-database:5432/${KEYCLOAK_DB_NAME}
      KC_DB_USERNAME: ${KEYCLOAK_DB_USER}
      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN_USER}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
    ports:
      - "${KEYCLOAK_PORT}:8080"
    command: ["start-dev"]
    depends_on:
      - keycloak-database

  inventory-service:
    image: polyforge-inventory:1.1
    environment:
      DATABASE_URL: postgresql://${INVENTORY_DB_USER}:${INVENTORY_DB_PASSWORD}@inventory_database:5432/${INVENTORY_DB_NAME}
    depends_on: [inventory_database, rabbitmq, redis]

  recommendation-service:
    image: polyforge-recommendation:1.0
    depends_on: [recommendation_database, rabbitmq, redis]

  catalog-service:
    image: polyforge-catalog:1.0
    depends_on: [catalog_database, rabbitmq, redis]

  order-service:
    image: polyforge-order:1.3
    environment:
      DATABASE_URL: postgresql://${ORDER_DB_USER}:${ORDER_DB_PASSWORD}@order_database:5432/${ORDER_DB_NAME}
    depends_on: [order_database, rabbitmq, redis]

volumes:
  order_data:
  catalog_data:
  inventory_data:
  recommendation_data:
  redis_data:
  rabbitmq_data:
  keycloak_database_data:

